<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hy.salon.basic.dao" >


    <select id="GET_PRODUCT_LIST"  parameterType="java.util.Map" resultMap="com.hy.salon.basic.entity.Product">

     SELECT * FROM salon.product WHERE salon_id=#{salonId};

    </select>



    <select id="GET_PRODUCT_BY_STATUS"  parameterType="java.util.Map" resultMap="com.hy.salon.basic.vo.StockTransferApplicationVo">

        SELECT
            a.record_id,
            a.application_no,
            a.out_warehouse_id,
            a.remark_application,
            a.remark_audit,
            a.record_status,
            a.record_id,
            b.qty,
            b.stock_transfer_application_id,
            b.product_id,
            c.salon_id,
            c.product_name,
            c.product_class,
            c.product_series_id,
            c.price_market,
            c.price
        FROM
            `stock_transfer_application` a
        LEFT JOIN stock_transfer_application_item b on a.record_id = b.stock_transfer_application_id
        LEFT JOIN product c ON b.product_id=c.record_id
        where a.record_status=#{recordStatus};

    </select>
    <select id="GET_PRODUCT_BY_TYPE"  parameterType="java.util.Map" resultMap="com.hy.salon.basic.vo.ProductStockMovementVo">

        select
              a.*,
              b.salon_id,
              b.product_name,
              b.product_class,
              b.product_series_id,
              b.price_market,
              b.price,
              b.product_code,
              b.specification,
              b.specification_unit,
              b.product_unit_id,
              b.bar_code,
              b.shelf_life,
              b.day_of_pre_warning,
              b.stock_of_pre_warning,
              b.record_status,
              b.description,
              c.stock_qty,
              c.cost
        from
              product_stock_movement a
        LEFT JOIN product b on a.product_id=b.record_id
        LEFT JOIN product_stock c on a.product_id=c.product_id
        where a.movement_type=#{movementType}
        and a.create_date between #{cTime} and #{eTime};
    </select>



    <select id="GET_SERVICE_FOR_SUIT"  parameterType="java.util.Map" resultMap="com.hy.salon.basic.vo.ServiceVo">

     SELECT ss.*,sss.times,sss.service_id,sss.service_suite_id FROM salon.service as ss left join salon.service_suite_item as sss on ss.record_id= sss.service_id
      where sss.service_suite_id= #{id};

    </select>


    <select id="GET_BIN_SERVICE_SERIES_FOR_PARENTId"  parameterType="java.util.Map" resultMap="com.hy.salon.basic.vo.ServiceSeriesVo">

    SELECT sss.*,svsi.record_id FROM salon.service_series as sss left join salon.vip_suite_item as svsi on sss.record_id = svsi.item_id
    where sss.parent_id= #{parentId} and svsi.record_type = #{recordType} and svsi.vip_suite_id = #{vipSuiteId};

    </select>


    <select id="GET_SERVICE_SERIES_FOR_PARENTId"  parameterType="java.util.Map" resultMap="com.hy.salon.basic.vo.ServiceSeriesVo">

    SELECT * FROM salon.service_series where parent_id= #{parentId};

    </select>


    <select id="GET_PRODUCT_FOR_SERIES"  parameterType="java.util.Map" resultType="java.util.Map">

   SELECT * FROM salon.product_series left join salon.product on product_series.record_id = product.product_series_id
    where product_series.series_name = #{seriesName} and product.salon_id = #{salonId};

    </select>

    <select id="GET_STUFF_NAME"  parameterType="java.util.Map" resultType="com.hy.salon.basic.vo.StuffVo">
        select
            a.job_name
        from job a
        LEFT JOIN stuff_job b on a.record_id=b.job_id
        where b.stuff_id=#{stuffId};
    </select>
    <select id="GET_SERVICE_BYRESERVATIONID"  parameterType="java.util.Map" resultType="java.util.Map">
        select s.* from service s LEFT JOIN reservation_item i on s.record_id = i.service_id where i.reservation_id = #{reservationId}
    </select>



    <select id="GET_SCHEDULE_BY_TIME"  parameterType="java.util.Map" resultType="com.hy.salon.basic.vo.ShiftVo">
        SELECT
            a.record_id as recordId,
            a.store_id as storeId,
            a.shift_type as shiftType,
            a.time_start as timeStart,
            a.time_end as timeEnd,
            b.stuff_id as stuffId,
            c.stuff_name as stuffName,
            b.shift_id as shiftId,
            b.`day` as day
        FROM
            shift a
        LEFT JOIN `schedule` b ON a.shift_type = b.shift_id

        LEFT JOIN stuff c ON b.stuff_id = c.record_id
        WHERE
            a.store_id=#{storeId}
        and b.`day` between #{timeStart} and #{timeEnd};
    </select>

    <select id="GET_SCHEDULE_BY_TIME_AND_STUFFID"  parameterType="java.util.Map" resultType="Map" >
        SELECT
            s.record_id as recordId,
            s.stuff_id as stuffId,
            s.day as day,
            ss.shift_type as shiftType
        FROM
            schedule s
        LEFT JOIN `shift` ss ON s.shift_id = ss.record_id
        WHERE s.stuff_id = #{stuffId} and
         s.`day` between #{timeStart} and #{timeEnd};
    </select>



    <select id="GET_ROLE_BY_USERID"  parameterType="java.util.Map" resultMap="com.zhxh.admin.entity.SystemRole">

     SELECT role.* FROM salon.system_role as role left join salon.role_user as roleuser on role.record_id= roleuser.role_id
      where roleuser.user_id= #{userId};

    </select>

    <select id="GET_JOB_BY_USERID"  parameterType="java.util.Map" resultMap="com.hy.salon.basic.entity.Job">

     SELECT job.* FROM salon.job as job left join salon.stuff_job as stuffjob on job.record_id= stuffjob.job_id
      where stuffjob.stuff_id= #{stuffId};

    </select>


    <!--    <select id="GET_JOB_BY_USERID"  parameterType="java.util.Map" resultMap="com.hy.salon.basic.entity.Job">

         SELECT job.* FROM salon.job as job left join salon.stuff_job as stuffjob on job.record_id= stuffjob.job_id
          where stuffjob.stuff_id= #{stuffId};

        </select>-->

    <select id="GET_RESERVATION_BY_TIME"  parameterType="java.util.Map" resultMap="com.hy.salon.basic.vo.StoreReservation">
        select Room.sName salon_name ,Room.recordId as salon_id , count(reserva.record_id ) as reservation_count from
        (select s.record_id as recordId,s.salon_name as sName,room.room_name as rName,room.record_id as roomId
        from salon s  join store_room room on s.record_id=room.store_id) as Room  join reservation reserva on Room.roomId = reserva.room_id
         where DATE_FORMAT(reserva.time_start,'%Y%m%d')=#{timeStart} GROUP BY Room.sName,Room.recordId
    </select>

    <select id="GET_STUFF_BY_USER"  parameterType="java.util.Map" resultMap="com.hy.salon.basic.entity.Stuff">
        SELECT * FROM salon.stuff as ss where ss.record_id = (SELECT sra.stuff_id FROM salon.role_action as sra where sra.system_user_id= #{userId} );
    </select>

    <select id="GET_BINDING_SERVICE_SERIES_FOR_PARENTId"  parameterType="java.util.Map" resultMap="com.hy.salon.basic.vo.ServiceSeriesVo">

    SELECT sss.*,sssi.record_id FROM salon.service_series as sss left join salon.service_suite_item as sssi on sss.record_id = sssi.service_id
    where sss.parent_id= #{parentId}  and sssi.service_suite_id = #{suiteId};

    </select>
    <!--日志模板-->
    <select id="GET_LOG_MODEL"  parameterType="java.util.Map" resultMap="com.hy.salon.basic.entity.NurseLogModel">


      select * from nurse_log_model limit #{page}, #{pageSize};

    </select>

    <!--根据美容院模糊查询店员 -->
    <select id="FUZZY_QUERY_STUFF"  parameterType="java.util.Map" resultMap="com.hy.salon.basic.entity.Stuff" >


select * from salon.stuff as ss where ss.store_id in(select salon.record_id from salon.salon as salon where salon.parent_id = #{salonId})
and ss.stuff_name like #{stuffName};


    </select>

    <!--根据门店模糊查询店员 -->
    <select id="FUZZY_QUERY_STUFF_FOR_STOREID"  parameterType="java.util.Map" resultMap="com.hy.salon.basic.entity.Stuff" >


      select * from salon.stuff as ss where ss.store_id =#{salonId}
      and ss.stuff_name like #{stuffName};


    </select>

    <select id="GET_STUFF_JOB_BY_STUFF_ID"  parameterType="java.util.Map" resultType="Map" >
        SELECT j.record_id recordId ,j.job_level jobLevel FROM job j where j.record_id in (SELECT s.job_id as jobId from stuff_job s WHERE s.stuff_id = #{stuffId});
    </select>

    <!--根据美容院模糊查询店员(店长) -->
    <select id="FUZZY_QUERY_STUFF2"  parameterType="java.util.Map" resultType="java.util.Map" >



select * from salon.stuff as ss where ss.store_id in(select salon.record_id from salon.salon as salon where salon.record_id = #{salonId})
and ss.stuff_name like #{stuffName};


    </select>

    <!--根据类别查询项目 -->
    <select id="QUERY_SERVICE_FOR_SERIES"  parameterType="java.util.Map" resultType="java.util.Map" >

    SELECT ss.service_name as serviceName,ss.price as sriceMarket,ss.record_id as recordId,
(SELECT record_id FROM salon.service_series   where record_id= #{parentId}) as seriesId
,(SELECT series_name FROM salon.service_series   where record_id= #{parentId}) as seriesName
FROM salon.service as ss where ss.service_series_id in(SELECT sss.record_id FROM salon.service_series as sss where sss.parent_id= #{parentId})
group by ss.record_id;


    </select>


    <!--查询已经绑定套卡的项目 -->
    <select id="QUERY_BIN_SERVICE_FOR_SERIES"  parameterType="java.util.Map" resultType="java.util.Map" >

   SELECT ss.record_id as recordId,ss.service_name as serviceName FROM salon.service as ss
    where ss.record_id in(select sssi.service_id from salon.service_suite_item as sssi where sssi.service_suite_id = #{suiteId});


    </select>



    <!--查询已经绑定充值卡的项目 -->
    <select id="QUERY_BIN_SERVICE_FOR_VIP"  parameterType="java.util.Map" resultType="java.util.Map" >

   SELECT ss.record_id as seriesId,ss.series_name as seriesName,svsi.record_type as recordType,svsi.discount FROM salon.vip_suite_item_discount_range as svsidr
    left join salon.service_series  as ss on ss.record_id = svsidr.service_id
    left join salon.vip_suite_item as svsi on svsi.record_id=svsidr.vip_suite_item_id
    where svsi.vip_suite_id =#{vipSuiteId} and svsi.record_type=#{recordType}
    ;

    </select>


    <!--查询顾客标签按门店 -->
    <select id="QUERY_TAG_FOR_SALON"  parameterType="java.util.Map" resultMap="com.hy.salon.basic.entity.Tag">

    select st.* from salon.tag as st left join salon.member_salon_tag as smst1 on st.record_id = smst1.tag_id where smst1.salon_id=#{salonId} and st.record_type=1

    </select>

    <!--查询会员档案 -->
    <select id="QUERY_MEMBER_FOR_SALON"  parameterType="java.util.Map" resultMap="com.hy.salon.basic.vo.MemberVo">

        SELECT sm.*,t.tag_name,ss.stuff_name FROM salon.member as sm
        left join salon.member_tag as mt  on sm.record_id=mt.member_id
        left join salon.tag as t  on t.record_id=mt.tag_id
        left join salon.stuff as ss on ss.record_id=sm.primary_beautician
        where sm.initial_store_id=#{salonId}



        <if test="startTime != null">
         and   sm.birthday &gt;= #{startTime} and birthday &lt;= #{endTime}

        </if>

        <if test="defaultStartDate != null">
          and   sm.entry_time &lt;= #{defaultStartDate}

        </if>

        <if test="memberGradeId != null">
            and   sm.member_grade = #{memberGradeId}

        </if>

        <if test="tag != null">
            and   t.record_id = #{tag}

        </if>




    </select>

    <!--查询会员档案(院长角色) -->
    <select id="QUERY_MEMBER_FOR_SALON2"  parameterType="java.util.Map" resultMap="com.hy.salon.basic.vo.MemberVo">

        SELECT sm.*,t.tag_name,ss.stuff_name FROM salon.member as sm
        left join salon.member_tag as mt  on sm.record_id=mt.member_id
        left join salon.tag as t  on t.record_id=mt.tag_id
        left join salon.stuff as ss on ss.record_id=sm.primary_beautician
        where sm.initial_store_id in(select sa.record_id from salon.salon as sa where sa.parent_id=#{salonId})


        <if test="startTime != null">
            and   sm.birthday &gt;= #{startTime} and birthday &lt;= #{endTime}

        </if>

        <if test="defaultStartDate != null">
            and   sm.entry_time &lt;= #{defaultStartDate}

        </if>

        <if test="memberGradeId != null">
            and   sm.member_grade = #{memberGradeId}

        </if>

        <if test="tag != null">
            and   t.record_id = #{tag}

        </if>




    </select>


    <!--获取该品牌下的产品数量 -->
    <select id="QUERY_COUNT_FOR_PRODUCT"  parameterType="java.util.Map" resultType="java.util.Map">

    SELECT * FROM salon.product where product_series_id in (select sps.record_id from salon.product_series as sps where sps.parent_id = #{parentId});

    </select>

    <!--获取该产品的详细参数 -->
    <select id="QUERY_PROPERTYNAME"  parameterType="java.util.Map" resultType="java.util.Map">

    select spp.property_name as propertyName ,spp.record_id as recordId from salon.product_property as spp
    left join salon.product_property_map as sppm on spp.record_id=sppm.product_property_id where sppm.product_id=#{productId} and spp.property_type=#{propertyType}

    </select>




    <select id="GET_STUFF_RESERVATION"  parameterType="java.util.Map" resultType="java.util.Map">
        select r.record_id as recordId,sss.stuff_name as stuffName ,m.room_name as roomName,ser.service_name as serviceName
        ,r.time_start as timeStart
        ,r.time_end as timeEnd
        from reservation r
        left join stuff sss on r.stuff_id = sss.record_id
        left join  reservation_item item  on r.record_id = item.reservation_id left join
        service ser on item.service_id = ser.record_id left join store_room m on r.room_id = m.record_id
        where  1=1  and sss.store_id=#{storeId}
        <if test="stuffId != null">
          and   r.stuff_id=#{stuffId}
        </if>
        <if test="roomId != null">
            and r.room_id=#{roomId}
        </if>
        <if test="serviceId != null">
            and item.service_id = #{serviceId}
        </if>

        <if test="timeStart != null">
            and r.date_ between #{timeStart} and #{timeEnd}
        </if>
    </select>


<!--    <select id="GET_STUFF_RESERVATIONCOUNT"  parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(*)
        from reservation r
        left join stuff sss on r.stuff_id = sss.record_id
        left join  reservation_item item  on r.record_id = item.reservation_id left join
        service ser on item.service_id = ser.record_id left join store_room m on r.room_id = m.record_id
        where 1=1 and
        sss.store_id =#{storeId}
        <if test="stuffId != null ">
            and   r.stuff_id=#{stuffId}
        </if>
        <if test="roomId != null">
            and r.room_id=#{roomId}
        </if>
        <if test="serviceId != null">
            and item.service_id = #{serviceId}
        </if>

        <if test="timeStart != null">
            and r.date_ between #{timeStart} and #{timeEnd}
        </if>

    </select>-->




    <select id="GET_RECHARGE"  parameterType="java.util.Map" resultType="java.util.Map">
        select  c.record_id as recordId,
        c.member_id as memberId,
        c.card_id as cardId,
        v.suite_name  as suiteName,
        c.card_type as cardType,
        c.amount_market as amountMarket,
        c.amount as amount,
        m.member_name as memberName
        from card_purchase c
        left join member m on c.member_id = m.record_id left join  vip_suite v on c.card_id = v.record_id
        where 1=1 and
        m.initial_store_id =#{storeId}
        <if test="memberName != null ">
            and
            m.member_name=#{memberName}
        </if>
        <if test="timeStart != null ">
            and
            c.create_date between  #{timeStart} and #{timeEnd}
        </if>
    </select>


    <select id="GET_MEMBERGIFT"  parameterType="java.util.Map" resultType="java.util.Map">

        select  c.record_id as recordId,
        m.member_name as memberName,
        c.ref_trans_id as refTransId,
        c.trans_type as transType,
        c.gift_type as giftType,
        c.git_id as gitId,
        c.qty as qty,
        c.gift_sub_type as giftSubType,
        c.gift_expired_date as giftExpiredDate
        from member_gift c
        left join member m on c.member_id = m.record_id
        where 1=1 and
        m.initial_store_id =#{storeId}
        and
        c.ref_trans_id = #{refTransId}
        <if test="memberName != null ">
            and
            m.member_name=#{memberName}
        </if>
    </select>

    <select id="GET_ARREARSLIST"  parameterType="java.util.Map" resultType="java.util.Map">
        select
        c.record_id as recordId,
        m.member_name as memberName,
        c.arrearages_date as arrearagesDate,
        c.arrearages_type as arrearagesType,
        c.amount_of_real_pay as amountOfRealPay,
        c.amount_payable as amountPayable,
        c.amount_dept as amountDept,
        c.reimbursement as reimbursement,
        c.is_paid_off as isPaidOff
        from arrearages_record c
        left join member m on c.member_id = m.record_id
        where 1=1 and
        m.initial_store_id =#{storeId}

        <if test="memberName != null ">
            and
            m.member_name=#{memberName}
        </if>

        <if test="timeStart != null ">
            and
            c.create_date between  #{timeStart} and #{timeEnd}
        </if>

    </select>


    <select id="GET_REPAYMENT"  parameterType="java.util.Map" resultType="java.util.Map">

        select
        c.reimbursement_amount as reimbursementAmount,
         c.reimbursement_date as reimbursementDate,
          c.still_need_to_pay as stillNeedToPay,
           c.is_paid_off as isPaidOff,
           c.method_payed as methodPayed,
           c.remark  as remark,
          c.record_id as recordId
        from repayment_record c
        where 1=1 and
        c.arrearages_record =#{arrearages_record}
    </select>


    <select id="GET_ABNORMAL_STOCK"  parameterType="java.util.Map" resultType="java.util.Map">
       select   DATE_FORMAT(create_date,'%Y-%m-%d') days,sum(record_create_type) abnormalSize from salon.product_stock_movement
       where  movement_type in(2,72) and warehouse_id=#{salonId} group by days;
    </select>

    <select id="GET_ABNORMAL_STOCK_FOR_PRODUCT_SERIES"  parameterType="java.util.Map" resultType="java.util.Map">
      SELECT spsm.movement_qty,spsm.movement_qty,sp.product_name FROM salon.product_stock_movement as spsm
      left join  salon.product as sp on spsm.product_id = sp.record_id where  spsm.movement_type in(2,72)
      and sp.product_series_id in(select sps.record_id from salon.product_series as sps where sps.parent_id=#{parentId})
      and DATE_FORMAT(spsm.create_date,'%Y-%m-%d')=#{days};
    </select>

    <select id="GET_LOG_FOR_STORE_ID"  parameterType="java.util.Map" resultType="java.util.Map">
      SELECT snl.log_content as logContent,ss2.stuff_name as stuffName,sm.member_name as memberName,snl.create_date as createDate,snl.log_type logType FROM salon.nurse_log as snl
      left join salon.stuff as ss2 on ss2.record_id = snl.stuff_id
      left join salon.member as sm on snl.member_id = sm.record_id
      where snl.stuff_id in(select ss.record_id from salon.stuff as ss where ss.store_id=#{storeId})
      <if test="logType != null">
      and snl.log_type=#{logType}
      </if>
        <if test="memberName != null">
            and sm.member_name=#{memberName}
        </if>
        <if test="stuffName != null">
            and ss2.stuff_name=#{stuffName}
        </if>

    </select>




    <select id="GET_PRODUCT_FOR_SALON"  parameterType="java.util.Map" resultType="java.util.Map">
    SELECT sp.* FROM salon.product as sp  where sp.store_id in(select ss.record_id from salon.salon as ss where ss.parent_id =#{salonId})

    <if test="productClass != null">
        and sp.product_class=#{productClass}
    </if>
    <if test="productSeriesId != null">
        and product_series_id=#{productSeriesId}
    </if>
    </select>

    <select id="GET_EXISTING_FOR_STORE"  parameterType="java.util.Map" resultType="java.util.Map">
         SELECT sum(sss.existing) as Existing FROM salon.stuff_score as sss  where sss.stuff_id in(select ss.record_id from salon.stuff as ss where ss.store_id = #{storeId})
    </select>

    <select id="GET_EXISTING_COUNT_FOR_STORE"  parameterType="java.util.Map" resultType="java.util.Map">
         SELECT count(sss.existing) as Existing FROM salon.stuff_score as sss  where sss.stuff_id in(select ss.record_id from salon.stuff as ss where ss.store_id = #{storeId})
    </select>

    <select id="GET_SCORE_RECORD_FOR_STORE"  parameterType="java.util.Map" resultMap="com.hy.salon.basic.entity.StuffScoreRecord">
        SELECT sssr.*,ss2.stuff_name as stuffName,ss3.stuff_name as salonName FROM salon.stuff_score_record as sssr left join salon.stuff as ss2 on sssr.stuff_id=ss2.record_id
        left join salon.stuff as ss3 on  sssr.issued_by=ss3.record_id
        where sssr.stuff_id in(select ss.record_id from salon.stuff as ss  where ss.store_id=#{storeId});
    </select>




    <select id="GET_MEMBERPRODUCTKEEP"  parameterType="java.util.Map" resultType="java.util.Map">
       select m.record_id  as recordId,p.product_name as productName,p.price price ,mi.qty_purchased qtyPurchased ,mi.qty_received as qtyReceived ,mi.create_date as createDate ,mi.record_id as productKeepItemId from member_product_keep m left join
        member_product_keep_item mi on m.record_id = mi.member_product_keep_id
        left join product p on mi.product_id = p.record_id
        where m.member_id = #{memberId}
    </select>

    <select id="GET_SUM_AMOUNT"  parameterType="java.util.Map" resultType="java.util.Map">
        SELECT sum(scp.amount) amount FROM salon.card_purchase as scp
        <where>
       <if test="storeId != null">
            and scp.member_id in(select sm.record_id from salon.member as sm where sm.initial_store_id = #{storeId})
       </if>
        <if test="startTime != null">
           and scp.create_date &gt;= #{startTime} and scp.create_date &lt;= #{endTime}
        </if>
        <if test="rechargeType != null">
            and scp.recharge_type=#{rechargeType}
        </if>
        <if test="cardType != null">
            and scp.card_type=#{cardType}
        </if>
        </where>
    </select>


    <select id="GET_QTY"  parameterType="java.util.Map" resultType="java.util.Map">
         SELECT sum(qty) as qty FROM salon.member_gift where gift_cash_type=#{giftCashType} and create_date &gt;= #{startTime} and create_date &lt;= #{endTime}
    </select>

    <select id="GET_PRODUCT_TOTAL"  parameterType="java.util.Map" resultType="java.util.Map">
         SELECT sp.product_name as productName,count(sp.product_name) as count1 FROM salon.card_purchase as scp left join salon.product as sp on scp.card_id = sp.record_id
        where scp.recharge_type=2 group by sp.product_name order by count1 desc limit 10;
    </select>

    <select id="GET_MOVEMENT"  parameterType="java.util.Map" resultType="java.util.Map">
    SELECT spsm.record_id as recordId,spsm.movement_qty as movementQty,spsm.movement_pur_qty as movementPurQty,sp.product_name as productName,sps2.series_name as seriesName FROM salon.product_stock_movement as spsm
    left join salon.product as sp on spsm.product_id=sp.record_id
    left join salon.product_series as sps on sp.product_series_id =sps.record_id
    left join salon.product_series as sps2 on sps2.record_id =sps.parent_id
    where spsm.movement_type in(2,72) and DATE_FORMAT(spsm.create_date,'%Y-%m-%d')=#{days} and spsm.warehouse_id=#{storeId};
   </select>


    <select id="GET_ARREARAGES_RECORD"  parameterType="java.util.Map" resultType="java.util.Map">
    SELECT sum(srr.reimbursement_amount) as reimbursementAmount FROM salon.repayment_record as srr
    left join salon.arrearages_record as sar on sar.ref_trans_id =srr.record_id
    and sar.member_id in(select sm.record_id from salon.member as sm where sm.initial_store_id = #{storeId})
   </select>

    <select id="GET_REJECT_AMOUNT"  parameterType="java.util.Map" resultType="java.util.Map">
    select sum(smpri.amount_reject) as rejectAmount from salon.member_product_reject_item as smpri
    left join salon.member_product_reject as smpr on smpri.member_product_reject_id=smpr.record_id
    where smpr.member_id in(select sm.record_id from salon.member as sm where sm.initial_store_id = #{storeId})
   </select>

    <select id="GET_MEMBER_TAG"  parameterType="java.util.Map" resultType="java.util.Map">
    select t.tag_name as tagName from salon.tag as t left join salon.member_tag as mt  on t.record_id=mt.tag_id
    left join salon.member as sm on sm.record_id = mt.member_id
    where sm.record_id = #{recordId}

   </select>



</mapper>