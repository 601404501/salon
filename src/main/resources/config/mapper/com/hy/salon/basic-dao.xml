<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hy.salon.basic.dao" >


  <select id="GET_STUFF_FOR_STOREId"  parameterType="java.util.Map" resultMap="com.hy.salon.basic.entity.Stuff">


   SELECT * FROM salon.stuff where store_id=#{storeId};


  </select>


    <select id="GET_SALON_FOR_PARENTId"  parameterType="java.util.Map" resultMap="com.hy.salon.basic.entity.Salon">


     SELECT * FROM salon.salon where parent_id=#{parentId};


    </select>

    <select id="GET_ROOM_FOR_STOREId"  parameterType="java.util.Map" resultMap="com.hy.salon.basic.entity.StoreRoom">


     SELECT * FROM salon.store_room where store_id=#{storeId} ;


    </select>

    <select id="GET_SALON_FOR_CREATEId"  parameterType="java.util.Map" resultMap="com.hy.salon.basic.entity.Salon">

    select * from salon.salon where create_by=#{createId} and parent_id != -1


  </select>


    <!--<insert id="INSERT_STOREROOM" parameterType="com.hy.salon.basic.entity.StoreRoom" useGeneratedKeys="true"-->
            <!--keyProperty="recordId" keyColumn="record_id">-->
         <!--INSERT INTO salon.store_room (store_id, room_name, record_status, create_date, create_by) VALUES (#{storeId}, #{roomName}, #{recordStatus}, #{createDate},#{createBy});-->

    <!--</insert>-->
    <select id="GET_RESERVATION_BYID"  parameterType="java.util.Map" resultMap="com.hy.salon.basic.entity.Reservation">

     SELECT * FROM salon.reservation

    </select>

    <select id="GET_PRODUCT_LIST"  parameterType="java.util.Map" resultMap="com.hy.salon.basic.entity.Product">

     SELECT * FROM salon.product WHERE salon_id=#{sa lonId};

    </select>


    <select id="GET_PRODUCT_BY_STATUS"  parameterType="java.util.Map" resultMap="com.hy.salon.basic.vo.StockTransferApplicationVo">

        SELECT
            a.record_id,a.application_no,a.out_warehouse_id,a.remark_application,a.remark_audit,a.record_status,a.record_id,b.qty,b.stock_transfer_application_id,b.product_id,c.salon_id,c.product_name,c.product_class,c.product_series_id,c.price_market,c.price
        FROM
            `stock_transfer_application` a
        LEFT JOIN stock_transfer_application_item b on a.record_id = b.stock_transfer_application_id
        LEFT JOIN product c ON b.product_id=c.record_id where a.record_status==#{recordStatus};

    </select>

</mapper>